openapi: 3.0.0
info:
  title: test-data-provider-service
  version: 2.0.0
servers:
  - url: http://localhost:5001
paths:
  /omni:
    post:
      summary: Adds one instance of test data to the queue
      description: ""
      operationId: createOmni
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OmniCreateDTO"
        description: Omni Object which represents one item in the queue
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OmniDTO"
        "409":
          description: No data_type or omni given
      tags:
        - omni
  /omni/search:
    post:
      operationId: searchOmni
      description: Searches for omnis. Results stay in queue
      tags:
        - omni
      summary: Provides omni
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OmniSearchDTO"
        required: true
      responses:
        "200":
          description: Returns omnis
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OmniDTO"
        "404":
          description: No omni for type was found
  "/omni/{dataType}":
    get:
      operationId: getOmni
      tags:
        - omni
      summary: Provides omni
      parameters:
        - in: path
          name: dataType
          description: Data type of the object you wanna get
          required: true
          schema:
            type: string
        - in: query
          name: keep
          description: Decides whether to keep the omni in the queue. Omni will be removed
            if it's not given
          required: false
          schema:
            type: boolean
        - in: query
          name: amount
          description: How may omnis you want default is 1
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Returns omnis
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OmniDTO"
        "404":
          description: No omni for type was found
  /omni/purge/{dataType}:
    delete:
      operationId: purgeQueueForDataType
      tags:
        - omni
      summary: removes alls omnis of one data type
      parameters:
        - in: path
          name: dataType
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
        "404":
          description: Data type not Found
        "409":
          description: No data type was given
  /omni/purge/all:
    delete:
      operationId: purgeAll
      tags:
        - omni
      summary: removes alls omnis
      responses:
        "200":
          description: OK
  /omni/delete:
    post:
      operationId: deleteOmni
      tags:
        - omni
      summary: removes  multiple omnis given
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        "200":
          description: OK
        "404":
          description: Data type not Found
        "409":
          description: No data type was given
  "/data-type/categories":
    get:
      operationId: getCategories
      tags:
        - data types
      summary: returns all categories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: name of category
        "404":
          description: "no queues found"
  "/data-type/categories/{category}":
    get:
      operationId: getDataTypes
      tags:
        - data types
      summary: returns all data types for a category
      parameters:
        - in: path
          required: true
          name: category
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataTypeDTO'
        "404":
          description: "no queues found"
  "/data-type/{dataType}":
    get:
      operationId: getDataType
      tags:
        - data types
      summary: returns a data type
      parameters:
        - in: path
          required: true
          name: dataType
          description: name of the data
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTypeDTO'
  /data-type/threshold:
    patch:
      summary: "sets threshold"
      description: "sets threshold"
      operationId: createThreshold
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdLevelCreateDTO'
        description: "sets threshold"
        required: true
      responses:
        "200":
          description: Updated
        "404":
          description: Not found
      tags:
        - data types
  /data-type/category:
    patch:
      summary: "sets category"
      description: "sets category"
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdateDTO'
        description: "sets threshold"
        required: true
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDTO'
        "404":
          description: Not found
      tags:
        - data types
components:
  schemas:
    CategoryUpdateDTO:
      type: object
      properties:
        dataTypeId:
          type: string
          format: uuid
        category:
          type: string
    CategoryDTO:
      type: object
      properties:
        name:
          type: string
        dataTypes:
          type: array
          items:
            $ref: "#/components/schemas/DataTypeDTO"
    DataTypeDTO:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
        amountOfOmnis:
          type: integer
        oldestOmni:
          type: string
          format: date-time
          description: time when oldest omni was created
        category:
          type: string
        thresholdLevels:
          type: array
          items:
            $ref: "#/components/schemas/ThresholdLevelDTO"
    ThresholdLevelCreateDTO:
      type: object
      properties:
        testDataid:
          type: string
          format: uuid
        thresholdLevel:
          type: array
          items:
            $ref: "#/components/schemas/ThresholdLevelDTO"
    ThresholdLevelDTO:
      type: object
      properties:
        minAmount:
          type: integer
        filling:
          type: string
          enum:
            - green
            - yellow
            - red
    OmniSearchDTO:
      type: object
      properties:
        dataType:
          type: string
        createdBefore:
          type: string
          format: date-time
    OmniCreateDTO:
      type: object
      properties:
        dataType:
          type: string
        omni:
          type: object
    OmniDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        dataType:
          type: string
        omni:
          type: object
        createdOn:
          type: string
          format: date-time